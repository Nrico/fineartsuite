<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Artwork Management</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/css/main.css">
  <meta name="csrf-token" content="<%= csrfToken %>">
</head>
<body class="font-sans bg-gray-50 text-black">
  <%- include('../partials/navbar'); %>
  <main class="max-w-4xl mx-auto p-4">
    <button id="new-artwork" class="mb-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">New Artwork</button>
    <div id="artwork-list">
      <% let currentArtist = null; %>
      <% artworks.forEach(function(art){ %>
        <% if (art.artist_id !== currentArtist) { %>
          <% if (currentArtist !== null) { %></ul></div><% } %>
          <div class="mb-6">
            <h3 class="font-semibold mb-2"><%= art.artist_name %></h3>
            <ul class="artwork-group space-y-4" data-artist="<%= art.artist_id %>">
        <% currentArtist = art.artist_id; } %>
              <li class="bg-white shadow-md rounded border" data-id="<%= art.id %>">
                <div class="art-toggle w-full flex items-center p-4 cursor-pointer" data-id="<%= art.id %>">
                  <img src="<%= art.imageThumb || art.imageStandard || art.imageFull %>" class="w-[50px] h-[50px] object-cover rounded mr-4"/>
                  <span class="flex-1"><%= art.title %></span>
                  <span class="grip ml-4 cursor-grab" draggable="true">&#9776;</span>
                </div>
                <div class="art-form-wrapper max-h-0 opacity-0 overflow-hidden transition-all ease-in-out">
                  <form class="p-4 space-y-2 art-form" data-id="<%= art.id %>" enctype="multipart/form-data">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <label class="block text-sm font-medium">Title
                  <input name="title" value="<%= art.title %>" class="mt-1 w-full border rounded px-2 py-1"/>
                </label>
                <label class="block text-sm font-medium">Price
                  <input type="text" name="price" value="<%= art.price %>" class="mt-1 w-full border rounded px-2 py-1"/>
                </label>
                <label class="block text-sm font-medium">Description
                  <textarea name="description" class="mt-1 w-full border rounded px-2 py-1"><%= art.description || '' %></textarea>
                </label>
                <label class="flex items-center gap-2 text-sm">
                  <input type="checkbox" name="framed" value="1" <%= art.framed ? 'checked' : '' %>>
                  Framed
                </label>
                <label class="flex items-center gap-2 text-sm">
                  <input type="checkbox" name="readyToHang" value="1" <%= art.ready_to_hang ? 'checked' : '' %>>
                  Ready to Hang
                </label>
              <label class="block text-sm font-medium">Status
                <select name="status" class="mt-1 w-full border rounded px-2 py-1">
                  <option value="available" <%= art.status === 'available' ? 'selected' : '' %>>Available</option>
                  <option value="inquire" <%= art.status === 'inquire' ? 'selected' : '' %>>Inquire</option>
                  <option value="offer" <%= art.status === 'offer' ? 'selected' : '' %>>Make an Offer</option>
                  <option value="collected" <%= art.status === 'collected' ? 'selected' : '' %>>Collected</option>
                </select>
              </label>
              <label class="block text-sm font-medium">Medium
                <input name="medium" value="<%= art.medium %>" class="mt-1 w-full border rounded px-2 py-1"/>
              </label>
              <label class="block text-sm font-medium">Collection
                <select name="collection_id" class="mt-1 w-full border rounded px-2 py-1">
                  <option value="">None</option>
                  <% collections.forEach(function(c){ %>
                    <option value="<%= c.id %>" <%= art.collection_id === c.id ? 'selected' : '' %>><%= c.name %></option>
                  <% }) %>
                </select>
              </label>
              <label class="block text-sm font-medium">Replace Image
                <input type="file" name="imageFile" accept="image/*" class="mt-1 w-full border rounded px-2 py-1"/>
              </label>
              <label class="block text-sm font-medium">Image URL
                <input type="url" name="imageUrl" class="mt-1 w-full border rounded px-2 py-1"/>
              </label>
              <p class="text-xs text-gray-500">Choose either an upload or a URL</p>
              <label class="flex items-center gap-2 text-sm">
                <input type="checkbox" name="isVisible" value="1" <%= art.isVisible ? 'checked' : '' %>>
                Visible
              </label>
              <button type="submit" class="save-btn bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">Save</button>
            </form>
          </div>
        </li>
      <% }) %>
      <% if (currentArtist !== null) { %></ul></div><% } %>
    </div>
  </main>
  <template id="new-artwork-template">
    <li class="bg-white shadow-md rounded border" data-new="true">
      <div class="art-toggle w-full flex items-center p-4 cursor-pointer" data-new="true">
        <div class="w-[50px] h-[50px] bg-gray-200 flex items-center justify-center rounded mr-4">New</div>
        <span class="font-semibold flex-1">Untitled</span>
        <span class="grip ml-4 cursor-grab" draggable="true">&#9776;</span>
      </div>
      <div class="art-form-wrapper max-h-0 opacity-0 overflow-hidden transition-all ease-in-out">
        <form class="p-4 space-y-2 art-form" data-new="true" enctype="multipart/form-data">
          <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <label class="block text-sm font-medium">Title
            <input name="title" class="mt-1 w-full border rounded px-2 py-1"/>
          </label>
          <label class="block text-sm font-medium">Price
            <input type="text" name="price" class="mt-1 w-full border rounded px-2 py-1"/>
          </label>
          <label class="block text-sm font-medium">Description
            <textarea name="description" class="mt-1 w-full border rounded px-2 py-1"></textarea>
          </label>
          <label class="flex items-center gap-2 text-sm">
            <input type="checkbox" name="framed" value="1">
            Framed
          </label>
          <label class="flex items-center gap-2 text-sm">
            <input type="checkbox" name="readyToHang" value="1">
            Ready to Hang
          </label>
          <label class="block text-sm font-medium">Status
            <select name="status" class="mt-1 w-full border rounded px-2 py-1">
              <option value="available">Available</option>
              <option value="inquire">Inquire</option>
              <option value="offer">Make an Offer</option>
              <option value="collected">Collected</option>
            </select>
          </label>
          <label class="block text-sm font-medium">Medium
            <input name="medium" class="mt-1 w-full border rounded px-2 py-1"/>
          </label>
          <label class="block text-sm font-medium">Collection
            <select name="collection_id" class="mt-1 w-full border rounded px-2 py-1">
              <option value="">None</option>
              <% collections.forEach(function(c){ %>
                <option value="<%= c.id %>"><%= c.name %></option>
              <% }) %>
            </select>
          </label>
          <label class="block text-sm font-medium">Image File
            <input type="file" name="imageFile" accept="image/*" class="mt-1 w-full border rounded px-2 py-1"/>
          </label>
          <label class="block text-sm font-medium">Image URL
            <input type="url" name="imageUrl" class="mt-1 w-full border rounded px-2 py-1"/>
          </label>
          <p class="text-xs text-gray-500">Provide an image file or a URL</p>
          <label class="flex items-center gap-2 text-sm">
            <input type="checkbox" name="isVisible" value="1" checked>
            Visible
          </label>
          <button type="submit" class="save-btn bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">Save</button>
        </form>
      </div>
    </li>
  </template>
  <script>
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    function toggleWrapper(wrapper) {
      if (wrapper.style.maxHeight && wrapper.style.maxHeight !== '0px') {
        wrapper.style.maxHeight = '0px';
        wrapper.style.opacity = '0';
      } else {
        wrapper.style.maxHeight = wrapper.scrollHeight + 'px';
        wrapper.style.opacity = '1';
      }
    }
    document.querySelectorAll('.art-toggle').forEach(btn => {
      btn.addEventListener('click', () => {
        const wrapper = btn.nextElementSibling;
        toggleWrapper(wrapper);
      });
    });
    function getDragAfterElement(container, y) {
      const elements = [...container.querySelectorAll('li:not(.opacity-50)')];
      return elements.reduce((closest, child) => {
        const box = child.getBoundingClientRect();
        const offset = y - box.top - box.height / 2;
        if (offset < 0 && offset > closest.offset) {
          return { offset, element: child };
        }
        return closest;
      }, { offset: Number.NEGATIVE_INFINITY }).element;
    }
    async function saveOrder(artistId, order) {
      try {
        const res = await fetch('/dashboard/artworks/order', {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json', 'CSRF-Token': csrfToken },
          body: JSON.stringify({ artistId, order })
        });
        if (!res.ok) throw new Error(await res.text() || res.statusText);
      } catch (err) {
        console.error(err);
      }
    }
    document.querySelectorAll('.artwork-group').forEach(list => {
      let dragItem;
      function initDrag(handle) {
        handle.addEventListener('click', e => e.stopPropagation());
        handle.addEventListener('dragstart', e => {
          dragItem = handle.closest('li');
          dragItem.classList.add('opacity-50');
          e.dataTransfer.effectAllowed = 'move';
        });
        handle.addEventListener('dragend', async () => {
          if (dragItem) {
            dragItem.classList.remove('opacity-50');
            const order = [...list.querySelectorAll('li')].map(li => li.dataset.id);
            await saveOrder(list.dataset.artist, order);
            dragItem = null;
          }
        });
      }
      list.addEventListener('dragover', e => {
        e.preventDefault();
        const after = getDragAfterElement(list, e.clientY);
        if (!dragItem) return;
        if (after == null) {
          list.appendChild(dragItem);
        } else if (after !== dragItem) {
          list.insertBefore(dragItem, after);
        }
      });
      list.querySelectorAll('.grip').forEach(initDrag);
    });
    function handleForm(form){
      const btn = form.querySelector('.save-btn');
      const toggleBtn = form.closest('li').querySelector('.art-toggle');
      let id = form.dataset.id;
      let isNew = form.dataset.new === 'true';
      form.addEventListener('submit', async e => {
        e.preventDefault();
        btn.disabled = true;
        const original = btn.textContent;
        btn.textContent = 'Saving...';
        const data = new FormData(form);
        const url = isNew ? '/dashboard/artworks' : '/dashboard/artworks/' + id;
        const method = isNew ? 'POST' : 'PUT';
        try {
          const res = await fetch(url, { method, headers: { 'CSRF-Token': csrfToken }, body: data });
          if (!res.ok) throw new Error(await res.text() || res.statusText);
          btn.textContent = 'Saved!';
          if (isNew) {
            const out = await res.json();
            id = out.id;
            form.dataset.id = id;
            toggleBtn.dataset.id = id;
            form.dataset.new = 'false';
            isNew = false;
          }
          setTimeout(() => {
            btn.textContent = original;
            btn.disabled = false;
            if (!isNew) {
              toggleWrapper(form.parentElement);
            }
          }, 1000);
        } catch(err) {
          btn.textContent = 'Error';
          setTimeout(() => { btn.textContent = original; btn.disabled = false; }, 2000);
        }
      });
    }
    document.querySelectorAll('.art-form').forEach(handleForm);
    document.getElementById('new-artwork').addEventListener('click', () => {
      const tpl = document.getElementById('new-artwork-template');
      const li = tpl.content.firstElementChild.cloneNode(true);
      const list = document.querySelector('.artwork-group') || document.getElementById('artwork-list');
      list.prepend(li);
      const btn = li.querySelector('.art-toggle');
      const wrapper = li.querySelector('.art-form-wrapper');
      btn.addEventListener('click', () => toggleWrapper(wrapper));
      handleForm(li.querySelector('form'));
      btn.click();
    });
  </script>
</body>
</html>
